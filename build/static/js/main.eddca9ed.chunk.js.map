{"version":3,"sources":["components/Header.js","components/SearchBox.js","components/DirectoryTable.js","components/AddUserForm.js","components/EditUserForm.js","components/Pagination.js","components/Modal.js","hooks/useModal.js","App.js","index.js"],"names":["Header","React","createElement","SearchBox","_ref","searchHandler","className","onChange","e","target","value","type","placeholder","DirectoryTable","props","_useSortableData","users","config","arguments","length","undefined","_useState","useState","_useState2","_slicedToArray","sortConfig","setSortConfig","sortedUsers","useMemo","sortableUsers","_toConsumableArray","sort","a","b","key","direction","requestSort","useSortableData","editUser","deleteUser","_useState3","_useState4","searchValue","setSearchValue","getClassNamesFor","name","updateUsers","filter","user","Object","keys","some","toString","toLowerCase","includes","Fragment","onClick","map","id","src","image","alt","first_name","last_name","username","email","IconButton","aria-label","EditIcon","DeleteIcon","colSpan","AddUserForm","initialFormState","password","setUser","handleInputChange","event","_event$target","_objectSpread","_defineProperty","onSubmit","preventDefault","addUser","pattern","required","EditUserForm","currentUser","useEffect","updateUser","Pagination","usersPerPage","totalUsers","paginate","pageNumbers","i","Math","ceil","push","number","href","Modal","isShowing","hide","content","ReactDOM","createPortal","aria-modal","aria-hidden","tabIndex","role","data-dismiss","document","body","useModal","setIsShowing","toggle","App","setUsers","editing","setEditing","_useState5","_useState6","setCurrentUser","_useState7","_useState8","currentPage","setCurrentPage","_useState9","_useModal","axios","then","response","data","_id","indexOfLastUser","indexOfFirstUser","currentUsers","slice","updatedUser","post","console","log","concat","pageNumber","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.eddca9ed.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Header = () => {\n  return (\n    <header>\n      <h1>CarWash Employee Directory</h1>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\nconst SearchBox = ({ searchHandler }) => {\n  const handleSearchInputChange = (e) => {\n    searchHandler(e.target.value);\n  };\n\n  return (\n    <form className=\"search\">\n      <input\n        onChange={handleSearchInputChange}\n        type=\"text\"\n        placeholder=\"Search...\"\n      />\n    </form>\n  );\n};\n\nexport default SearchBox;\n","import React, { useState, useMemo } from \"react\";\nimport SearchBox from \"./SearchBox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\n\nconst useSortableData = (users, config = null) => {\n  const [sortConfig, setSortConfig] = useState(config);\n\n  const sortedUsers = useMemo(() => {\n    let sortableUsers = [...users];\n    if (sortConfig !== null) {\n      sortableUsers.sort((a, b) => {\n        if (a[sortConfig.key] < b[sortConfig.key]) {\n          return sortConfig.direction === \"ascending\" ? -1 : 1;\n        }\n        if (a[sortConfig.key] > b[sortConfig.key]) {\n          return sortConfig.direction === \"ascending\" ? 1 : -1;\n        }\n        return 0;\n      });\n    }\n    return sortableUsers;\n  }, [users, sortConfig]);\n\n  const requestSort = (key) => {\n    let direction = \"ascending\";\n    if (\n      sortConfig &&\n      sortConfig.key === key &&\n      sortConfig.direction === \"ascending\"\n    ) {\n      direction = \"descending\";\n    }\n    setSortConfig({ key, direction });\n  };\n\n  return { users: sortedUsers, requestSort, sortConfig };\n};\n\nconst DirectoryTable = (props) => {\n  const { users, requestSort, sortConfig } = useSortableData(props.users);\n  const { editUser, deleteUser } = props;\n  const [searchValue, setSearchValue] = useState(\"\");\n  const getClassNamesFor = (name) => {\n    if (!sortConfig) {\n      return;\n    }\n    return sortConfig.key === name ? sortConfig.direction : undefined;\n  };\n\n  const searchHandler = (value) => {\n    setSearchValue(value);\n  };\n\n  let updateUsers = users.filter((user) => {\n    return Object.keys(user).some((key) =>\n      user[key]\n        .toString()\n        .toLowerCase()\n        .includes(searchValue.toString().toLowerCase())\n    );\n  });\n\n  return (\n    <>\n      <div className=\"container\">\n        <SearchBox searchHandler={searchHandler} />\n        <table>\n          <thead>\n            <tr>\n              <th>Image</th>\n              <th>\n                <button\n                  type=\"button\"\n                  onClick={() => requestSort(\"first_name\")}\n                  className={getClassNamesFor(\"first_name\")}\n                >\n                  First Name\n                </button>\n              </th>\n              <th>\n                <button\n                  type=\"button\"\n                  onClick={() => requestSort(\"last_name\")}\n                  className={getClassNamesFor(\"last_name\")}\n                >\n                  Last Name\n                </button>\n              </th>\n              <th>\n                <button\n                  type=\"button\"\n                  onClick={() => requestSort(\"username\")}\n                  className={getClassNamesFor(\"username\")}\n                >\n                  Username\n                </button>\n              </th>\n              <th>\n                <button\n                  type=\"button\"\n                  onClick={() => requestSort(\"email\")}\n                  className={getClassNamesFor(\"email\")}\n                >\n                  Email\n                </button>\n              </th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {updateUsers.length > 0 ? (\n              updateUsers.map((user) => (\n                <tr key={user.id}>\n                  <td>\n                    <img\n                      src={user.image}\n                      alt={user.first_name + \" \" + user.last_name}\n                    />\n                  </td>\n                  <td>{user.first_name}</td>\n                  <td>{user.last_name}</td>\n                  <td>{user.username}</td>\n                  <td>{user.email}</td>\n                  <td>\n                    <IconButton\n                      aria-label=\"edit\"\n                      onClick={() => {\n                        editUser(user);\n                      }}\n                    >\n                      <EditIcon />\n                    </IconButton>\n                    <IconButton\n                      aria-label=\"delete\"\n                      onClick={() => deleteUser(user.id)}\n                    >\n                      <DeleteIcon />\n                    </IconButton>\n                  </td>\n                </tr>\n              ))\n            ) : (\n              <tr>\n                <td colSpan={5}>No Users</td>\n              </tr>\n            )}\n          </tbody>\n        </table>\n      </div>\n    </>\n  );\n};\n\nexport default DirectoryTable;\n","import React, { useState } from \"react\";\n\nconst AddUserForm = (props) => {\n  const initialFormState = {\n    id: null,\n    first_name: \"\",\n    last_name: \"\",\n    username: \"\",\n    password: \"\",\n    email: \"\",\n    image: \"\",\n  };\n  const [user, setUser] = useState(initialFormState);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n\n    setUser({ ...user, [name]: value });\n  };\n\n  return (\n    <form\n      onSubmit={(event) => {\n        event.preventDefault();\n        if (!user.first_name || !user.last_name) return;\n\n        props.addUser(user);\n        setUser(initialFormState);\n      }}\n    >\n      <h2>Add User</h2>\n      <div className=\"form-group\">\n        <label>First Name</label>\n        <input\n          type=\"text\"\n          name=\"first_name\"\n          value={user.first_name}\n          onChange={handleInputChange}\n          pattern=\"[a-zA-Z]+\"\n          required\n        />\n      </div>\n      <div className=\"form-group\">\n        <label>Last Name</label>\n        <input\n          type=\"text\"\n          name=\"last_name\"\n          value={user.last_name}\n          onChange={handleInputChange}\n          pattern=\"[a-zA-Z]+\"\n          required\n        />\n      </div>\n      <div className=\"form-group\">\n        <label>Username</label>\n        <input\n          type=\"text\"\n          name=\"username\"\n          value={user.username}\n          onChange={handleInputChange}\n          pattern=\"[a-zA-Z0-9-]+\"\n          required\n        />\n      </div>\n      <div className=\"form-group\">\n        <label>Password</label>\n        <input\n          type=\"text\"\n          name=\"password\"\n          value={user.password}\n          onChange={handleInputChange}\n          pattern=\"[a-zA-Z0-9-]+\"\n          required\n        />\n      </div>\n      <div className=\"form-group\">\n        <label>Email</label>\n        <input\n          type=\"text\"\n          name=\"email\"\n          value={user.email}\n          onChange={handleInputChange}\n          pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\"\n          required\n        />\n      </div>\n      <button className=\"modal-button\">Add</button>\n    </form>\n  );\n};\n\nexport default AddUserForm;\n","import React, { useState, useEffect } from \"react\";\n\nconst EditUserForm = (props) => {\n  const [user, setUser] = useState(props.currentUser);\n\n  useEffect(() => {\n    setUser(props.currentUser);\n  }, [props]);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n\n    setUser({ ...user, [name]: value });\n  };\n\n  return (\n    <form\n      onSubmit={(event) => {\n        event.preventDefault();\n        props.updateUser(user.id, user);\n      }}\n    >\n      <div className=\"form-group\">\n        <h2>Edit User</h2>\n        <label>First Name</label>\n        <input\n          type=\"text\"\n          name=\"first_name\"\n          value={user.first_name}\n          onChange={handleInputChange}\n          pattern=\"[a-zA-Z]+\"\n          required\n        />\n      </div>\n      <div className=\"form-group\">\n        <label>Last Name</label>\n        <input\n          type=\"text\"\n          name=\"last_name\"\n          value={user.last_name}\n          onChange={handleInputChange}\n          pattern=\"[a-zA-Z]+\"\n          required\n        />\n      </div>\n      <div className=\"form-group\">\n        <label>Username</label>\n        <input\n          type=\"text\"\n          name=\"username\"\n          value={user.username}\n          onChange={handleInputChange}\n          pattern=\"[a-zA-Z0-9-]+\"\n          required\n        />\n      </div>\n      <div className=\"form-group\">\n        <label>Password</label>\n        <input\n          type=\"password\"\n          name=\"password\"\n          value={user.password}\n          onChange={handleInputChange}\n          pattern=\"[a-zA-Z0-9-]+\"\n          required\n        />\n      </div>\n      <div className=\"form-group\">\n        <label>Email</label>\n        <input\n          type=\"text\"\n          name=\"email\"\n          value={user.email}\n          onChange={handleInputChange}\n          pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\"\n          required\n        />\n      </div>\n      <button className=\"modal-button\">Update user</button>\n    </form>\n  );\n};\n\nexport default EditUserForm;\n","import React from \"react\";\n\nconst Pagination = ({ usersPerPage, totalUsers, paginate }) => {\n  const pageNumbers = [];\n\n  for (let i = 1; i <= Math.ceil(totalUsers / usersPerPage); i++) {\n    pageNumbers.push(i);\n  }\n\n  return (\n    <nav>\n      <ul className=\"pagination\">\n        {pageNumbers.map((number) => (\n          <li key={number} className=\"page-item\">\n            <a onClick={() => paginate(number)} href=\"!#\" className=\"page-link\">\n              {number}\n            </a>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n\nexport default Pagination;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nconst Modal = ({ isShowing, hide, content }) =>\n  isShowing\n    ? ReactDOM.createPortal(\n        <>\n          <div className=\"modal-overlay\" />\n          <div\n            className=\"modal-wrapper\"\n            aria-modal\n            aria-hidden\n            tabIndex={-1}\n            role=\"dialog\"\n          >\n            <div className=\"modal\">\n              <div className=\"modal-header\">\n                <button\n                  type=\"button\"\n                  className=\"modal-close-button\"\n                  data-dismiss=\"modal\"\n                  aria-label=\"Close\"\n                  onClick={hide}\n                >\n                  <span aria-hidden=\"true\">&times;</span>\n                </button>\n              </div>\n              {content}\n            </div>\n          </div>\n        </>,\n        document.body\n      )\n    : null;\n\nexport default Modal;\n","import { useState } from \"react\";\n\nconst useModal = () => {\n  const [isShowing, setIsShowing] = useState(false);\n\n  function toggle() {\n    setIsShowing(!isShowing);\n  }\n\n  return {\n    isShowing,\n    toggle,\n  };\n};\n\nexport default useModal;\n","import React, { useState, useEffect } from \"react\";\nimport Header from \"./components/Header\";\nimport DirectoryTable from \"./components/DirectoryTable\";\nimport AddUserForm from \"./components/AddUserForm\";\nimport EditUserForm from \"./components/EditUserForm\";\nimport Pagination from \"./components/Pagination\";\nimport Modal from \"./components/Modal\";\nimport useModal from \"./hooks/useModal\";\nimport axios from \"axios\";\n\nconst App = () => {\n  const [users, setUsers] = useState([]);\n  const [editing, setEditing] = useState(false);\n  const initialFormState = {\n    id: null,\n    first_name: \"\",\n    last_name: \"\",\n    username: \"\",\n    email: \"\",\n    image: \"\",\n  };\n  const [currentUser, setCurrentUser] = useState(initialFormState);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [usersPerPage] = useState(10);\n  const { isShowing, toggle } = useModal();\n\n  useEffect(() => {\n    axios(\"http://localhost:3000/admin/users/data\")\n      .then((response) =>\n        response.data.map((user) => ({\n          id: user._id,\n          first_name: user.first_name,\n          last_name: user.last_name,\n          username: user.username,\n          email: user.email,\n          image: user.image\n        }))\n      )\n      .then((data) => {\n        setUsers(data);\n      });\n  }, []);\n\n  // incrementing ids + adding placeholder image manually\n  // TODO: update id and image handling when tying this to a database\n  const addUser = (user) => {\n    toggle();\n    user.id = users.length + 1;\n    user.image = \"https://randomuser.me/api/portraits/thumb/lego/1.jpg\";\n    \n    axios\n    .post(\"http://localhost:3000/users\", { user })\n    .then((response) => {\n      console.log('Data:', response)\n      setUsers([user, ...users]);\n    });\n  };\n\n  const editUser = (user) => {\n    setEditing(true);\n    toggle();\n    setCurrentUser({\n      id: user.id,\n      first_name: user.first_name,\n      last_name: user.last_name,\n      username: user.username,\n      email: user.email,\n      image: user.image,\n    });\n  };\n\n  const updateUser = (id, updatedUser) => {\n    setEditing(false);\n    setUsers(users.map((user) => (user.id === id ? updatedUser : user)));\n    toggle();\n  };\n\n  const deleteUser = (id) => {\n    setUsers(users.filter((user) => user.id !== id));\n  };\n\n  // pagination\n  const indexOfLastUser = currentPage * usersPerPage;\n  const indexOfFirstUser = indexOfLastUser - usersPerPage;\n  const currentUsers = users.slice(indexOfFirstUser, indexOfLastUser);\n  // change page\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\n\n  return (\n    <>\n      <Header />\n      <div className=\"container\">\n        <button className=\"button-add\" onClick={toggle}>\n          Add User\n        </button>\n      </div>\n      {editing ? (\n        <Modal\n          isShowing={isShowing}\n          hide={toggle}\n          content={\n            <EditUserForm\n              setEditing={setEditing}\n              currentUser={currentUser}\n              updateUser={updateUser}\n            />\n          }\n        />\n      ) : (\n        <Modal\n          isShowing={isShowing}\n          hide={toggle}\n          content={<AddUserForm addUser={addUser} />}\n        />\n      )}\n      <DirectoryTable\n        users={currentUsers}\n        editUser={editUser}\n        deleteUser={deleteUser}\n      />\n      <Pagination\n        usersPerPage={usersPerPage}\n        totalUsers={users.length}\n        paginate={paginate}\n      />\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}